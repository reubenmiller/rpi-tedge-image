name: Bake Image
permissions:
  contents: write
on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  info:
    name: Build information
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.info.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: taiki-e/install-action@just
      - id: info
        name: Get Version
        run: |
          case "${GITHUB_REF}" in
            refs/tags/*)
              version="${GITHUB_REF#refs/*/}"
              echo "Using version from tag: $version"
              ;;
            *)
              version="$(just generate_version)"
              echo "Using version from timestamp: $version"
              ;;
          esac
          echo "version=$version" >> "$GITHUB_OUTPUT"

  bake-image:
    name: Bake Image ${{ matrix.job.image }}
    runs-on: ubuntu-latest
    needs: info
    strategy:
      fail-fast: false
      matrix:
        job:
          - { image: pi4 }
          - { image: tryboot }
          - { image: tryboot-containers }
          - { image: u-boot }
          - { image: u-boot-containers }
          - { image: u-boot-armhf }
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: taiki-e/install-action@just
      - name: Install dependencies
        run: just setup
      - id: info
        env:
          VERSION: ${{needs.info.outputs.version}}
        run: |
          source <(just show)
          echo "PREFIX=$PREFIX" >> "$GITHUB_OUTPUT"
      - name: Configure .env
        env:
          IMAGE_CONFIG: ${{secrets.IMAGE_CONFIG || ''}}
        run: |
          echo "IMAGE_NAME=${{ steps.info.outputs.PREFIX }}${{ matrix.job.image }}_${{ needs.info.outputs.version }}" > ".env"
          if [ -n "$IMAGE_CONFIG" ]; then
            echo "Adding custom IMAGE_CONFIG settings to .env"
            echo "$IMAGE_CONFIG" >> ".env"
          fi

      - name: Build image
        env:
          VERSION: ${{needs.info.outputs.version}}
        run: |
          just IMAGE=${{ matrix.job.image }} build

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.info.outputs.PREFIX }}${{ matrix.job.image }}_${{ needs.info.outputs.version }}
          path: |
            build/
            *.sbom.txt

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - info
      - bake-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: release
      - name: Show release artifacts
        run: ls -l release/*/*
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          generate_release_notes: true
          draft: true
          files: |
            ./release/*/*
            ./release/*/*/*
